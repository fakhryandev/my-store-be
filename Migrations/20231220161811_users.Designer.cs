// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace store_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231220161811_users")]
    partial class Users
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("createdby")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modifiedby")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("ProductDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("createdby")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modifiedby")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("plu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ProductVariantDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("createdby")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("image_location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("modifiedby")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("qty")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("productvariants");
                });

            modelBuilder.Entity("UserDTO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("createdby")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("is_admin")
                        .HasColumnType("boolean");

                    b.Property<string>("modifiedby")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
